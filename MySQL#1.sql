CREATE TABLE EMPLOYEE_TABLE(
    EMP_ID INT,
    SALARY INT,
    DEPT_ID INT
);
INSERT INTO EMPLOYEE_TABLE
VALUES (100, 24000, 1);
INSERT INTO EMPLOYEE_TABLE
VALUES (101, 17000, 1);
INSERT INTO EMPLOYEE_TABLE
VALUES (103, 10000, 1);
INSERT INTO EMPLOYEE_TABLE
VALUES (104, 9000, 2);
INSERT INTO EMPLOYEE_TABLE
VALUES (105, 11000, 2);
INSERT INTO EMPLOYEE_TABLE
VALUES (106, 16000, 3);
CREATE TABLE DEPARTMENT_TABLE(DEPT_ID INT, DEPT_NAME VARCHAR(30));
INSERT INTO DEPARTMENT_TABLE
VALUES (1, 'Accounts');
INSERT INTO DEPARTMENT_TABLE
VALUES (2, 'Marketing');
INSERT INTO DEPARTMENT_TABLE
VALUES (3, 'IT');
-- Query #1
-- Using aggregate function with GROUP BY 
SELECT SUM(SALARY),
    DEPT_ID
FROM EMPLOYEE_TABLE
GROUP BY DEPT_ID;
-- Query #2
SELECT E.DEPT_ID,
    DEPARTMENT_NAME,
    ROUND(AVG(SALARY), 2) AVERAGE_SALARY
FROM EMPLOYEE_TABLE E
    INNER JOIN DEPARTMENT_TABLE D ON D.DEPT_ID = E.DEPT_ID
GROUP BY E.DEPT_ID;
-- Adding a column into an employee table
ALTER TABLE EMPLOYEE_TABLE
ADD JOB_ID INT;
-- Creating a JOB Table
CREATE TABLE JOB(JOB_ID INT, JOB_TITLE VARCHAR(30));
-- Renaming table name in MySQL
ALTER TABLE EMPLOYEE_TABLE
    RENAME TO EMPLOYEE;
-- Renaming table name in MySQL
ALTER TABLE DEPARTMENT_TABLE
    RENAME TO DEPARTMENT;
-- Query #3
SELECT e.dept_id,
    e.dept_name,
    e.job_id,
    COUNT(e.employee_id)
FROM employee e,
    INNER JOIN department d on d.dept_id = e.dept_id
    INNER JOIN job j on j.job_id = e.job_id
GROUP BY e.dept_id,
    e.job_id;

-- Alter column of the table
ALTER TABLE EMPLOYEE
CHANGE COLUMN JOB_ID TO job_id;
-- Or
ALTER TABLE EMPLOYEE
RENAME COLUMN JOB_ID TO job_id;
